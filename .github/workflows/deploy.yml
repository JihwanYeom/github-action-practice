name: CI/CD Pipeline
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_SSH_PRIVATE_KEY }}
          script: |
            #!/bin/bash
            set -e
            
            cd /home/ubuntu/github-action-practice
            
            echo "Start deployment"
            git pull origin main
            
            echo "Gradle Build (skipping tests)"
            chmod +x ./gradlew
            ./gradlew build -x test
            
            echo "--- Terminating existing process if any ---"
            # root로 실행된 java 프로세스를 죽이기 위해 sudo 사용
            sudo pkill -f "java -jar.*github-action-practice.*\.jar" || true
            echo "Waiting 5 seconds for shutdown..."
            sleep 5
            
            echo "Deploy new application"
            
            JAR_FILE=$(find build/libs -name 'github-action-practice-*.jar' ! -name '*-plain.jar' -print -quit)
            
            if [ -z "$JAR_FILE" ]; then
                echo "ERROR: JAR file not found."
                ls -l build/libs/
                exit 1
            fi
            
            # echo 명령어에는 sudo가 필요 없습니다.
            echo "Found JAR file to deploy: $JAR_FILE"
            
            LOG_PATH="/home/ubuntu/github-action-practice/logs/server_log_$(date +%Y-%m-%d).txt"
            
            # 로그 디렉토리 생성은 sudo로 안전하게 실행
            sudo mkdir -p $(dirname "$LOG_G_PATH")
            
            # --- ✨ 여기가 수정된 부분 ✨ ---
            # 명령어 전체가 root 권한으로 실행되도록 sh -c 로 감싸줍니다.
            # 이렇게 하면 리다이렉션(>>) 권한 문제도 해결됩니다.
            sudo sh -c "nohup java -jar '$JAR_FILE' >> '$LOG_PATH' 2>&1 &"
            
            echo "Deployment complete"
